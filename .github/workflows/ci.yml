name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v5
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest
    env:
      EXAMPLE_ROOT: ${{github.workspace}}/__examples__
      TOOL_PATH: ${{github.workspace}}/__examples__/ExampleTool
      SOLUTION_PATH: ${{github.workspace}}/__examples__/ExampleLibrary/ExampleLibrary.csproj

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v5
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pack tool
        run: dotnet pack ${{ env.TOOL_PATH }}

      - name: Build example
        run: dotnet build ${{ env.SOLUTION_PATH  }}

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          source: ${{ env.TOOL_PATH }}/bin/Release
          solution: ${{ env.SOLUTION_PATH  }}
          isDefaultBranch: false
          versionSuffix: ${{ github.ref }}
          increment: ReleaseLabel
          workingDirectory: ${{ env.EXAMPLE_ROOT }}

      - name: Print Output
        id: output
        run: echo "${{ steps.test-action.outputs.Version }}"
